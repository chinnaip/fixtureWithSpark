Submit an Event and verify that it gets routed to the correct kafka topic

ParameterizedEvent


!3 Constants
!| script        |data utility        |
|$productserial1=|create random string|
|$productnumber1=|create random string|
|$gdid1=         |create random string|

!2 List All Thingformation Types and get UUID from SA Event
!| script          |get request                                           |
|set url           |$REST_MGMTURL/thingformationtypes                     |
|check             |execute get request|true                              |
|show              |get response body                                     |
|show               |get header x tracking id |
|$tft_uuid_list=   |check jsonpath     |$[?(@.thingformationTypeName=='Event')].thingformationTypeId       ||
|$thingtypeid_list=|check jsonpath     |$[?(@.thingformationTypeName=='Event')].thingTypeId||

!| script     |data utility                          |
|$tft_uuid=   |checkJsonpath;|$tft_uuid_list   |$.[0]|
|$thingtypeid=|checkJsonpath;|$thingtypeid_list|$.[0]|


!3 Preparation: Create Clean Thing (createThing)
!| script           |post request        |
|set url            |$REST_BASEURL/things|
|set expected status|201                 |
|set body                                |!-
{
	"thingType": {
		"thingTypeId": "$thingtypeid"
	},
	"attributes": {
                "GDID": "$gdid1"
	}
}
-!|
|check       |execute post request|true |
|$thing_uuid=|check jsonpath      |thingId||
|show        |get response body         |
|show               |get header x tracking id |

!2 Preparation: Create Kafka Client
!| script      |AvroConsumer|${KAFKA_SERVER}|${SCHEMA_REGISTRY_URLS}|${EXPECTED_TOPIC_NAME}|com.hp.ts.sa.analysis.messages.Event|${KAFKA_SECURITY_PROTOCOL}|${KAFKA_TRUSTSTORE_PATH}|${KAFKA_TRUSTSTORE_PASSWD}|
|$avroConsumer=|start                                                                                                                                                                                     |

!2 Upload event
!| script               |multipart upload                                              |
|set url                |$REST_BASEURL/thingformations?thingformationTypeId=$tft_uuid&thingId=$thing_uuid|
|set multipart file     |${EVENT_FILE_NAME}                                            |
|set expected status    |201                                                           |
|set multipart mime type|application/zip                  status                       |
|check                  |execute multipart upload         |true                        |
|$tf_uuid=              |check jsonpath                   |$[0].uuid         |         |
|show                   |get response body                                             |
|show               |get header x tracking id |


!2 Consume Kafka Message
!| script           |$avroConsumer              |
|$wrapper=|consume;|getThingformationId|$tf_uuid|

!2 Extract event object from wrapper
!| script|$wrapper       |
|$event= |get avro object|

!2 Check if thingformation_id matches result of Upload event
|script|data utility                                          |
|check  |checkJsonpath;|$event|$.['thingformation_id']|$tf_uuid|


